// Mocks generated by Mockito 5.3.1 from annotations
// in boilerplate_flutter/test/services/setting_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:ui' as _i2;

import 'package:mockito/mockito.dart' as _i1;
import 'package:repository/repository/setting_repository.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLocale_0 extends _i1.SmartFake implements _i2.Locale {
  _FakeLocale_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SettingRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSettingRepository extends _i1.Mock implements _i3.SettingRepository {
  MockSettingRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Locale getCurrentLocale() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentLocale,
          [],
        ),
        returnValue: _FakeLocale_0(
          this,
          Invocation.method(
            #getCurrentLocale,
            [],
          ),
        ),
      ) as _i2.Locale);
  @override
  List<_i2.Locale> getSupportedLocales() => (super.noSuchMethod(
        Invocation.method(
          #getSupportedLocales,
          [],
        ),
        returnValue: <_i2.Locale>[],
      ) as List<_i2.Locale>);
}
